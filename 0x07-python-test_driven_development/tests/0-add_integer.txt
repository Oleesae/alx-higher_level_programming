The ``0-add_integer`` module
======================

Using ``add_integer``
-------------------

First import ``add_integer`` from the ``0-add_integer`` module:

    >>> add_integer = __import__('0-add_integer').add_integer


Missing values:

    >>> add_integer(6)
    104

    >>> add_integer(7.3)
    105

    >>> add_integer(100, -2)
    98

    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(34.6, 57)
    91

Wrong values:

      >>> add_integer("int")
      Traceback (most recent call last):
      TypeError: a must be an integer

      >>> add_integer(4, "float")
      Traceback (most recent call last):
      TypeError: b must be an integer

      >>> add_integer("The", "float")
      Traceback (most recent call last):
      TypeError: a must be an integer

Case Overflow:
    >>> add_integer(float('inf'), 0)
        Traceback (most recent call last):
	  	        ...
	OverflowError: cannot convert float infinity to integer

Case NaN:

    >>> add_integer(0, float('nan'))
        Traceback (most recent call last):
	    	        ...
        ValueError: cannot convert float NaN to integer
